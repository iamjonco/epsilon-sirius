import 'EcoreUtil.eol';
import 'SiriusUtil.eol';

pre {
	var ePackage = ECore!EPackage.all.first();
	
	// TODO: Handle multiple Groups
	var topGroup : new ODesign!viewpoint::description::Group;
	topGroup.name := ePackage.name;
	
	// TODO: Handle multiple Viewpoints
	var topViewpoint : new ODesign!viewpoint::description::Viewpoint;
	topViewpoint.name := ePackage.name;
	topViewpoint.modelFileExtension := 
		ePackage.getAnnotationValue('gmf.diagram','model.extension').ifUndefined('*');
	topGroup.ownedViewpoints.add(topViewpoint);
	
	// Setup default colors
	var defaultColor := topGroup.getColor('DEFAULT_COLOR', 211, 211, 211);
	var defaultLineColor := topGroup.getColor('DEFAULT_LINE', 0, 0, 0);
	var defaultBorderColor := topGroup.getColor('DEFAULT_BORDER', 0, 0, 0);
	var defaultLabelColor := topGroup.getColor('DEFAULT_LABEL', 0, 0, 0);
}

// TODO: Handle multiple metamodel imports
// TODO: do we need multiple tool sections?
// FIXME: Href link in metamodel that is generated sucks
// TODO: Handle multiple layers - probs should be the nodes that set it
rule Diagram
	transform s : ECore!EClass
	to t : ODesign!diagram::description::DiagramDescription {
	guard: s.isAnnotatedAs('gmf.diagram')
	
	var ann := s.getAnnotation('gmf.diagram');

	t.name := s.getAnnotationValue('gmf.diagram', 'label').ifUndefined('Diagram');
	t.domainClass = s.getDomainClassString();
	t.metamodel.add(ePackage);
	t.getLayer().getToolSection(); // Sets up layers and tool sections
	
	topViewpoint.ownedRepresentations.add(t);
}

rule Node 
	transform s : ECore!EClass
	to t : ODesign!diagram::description::NodeMapping {
	guard: s.isNode()
	
	var ann := s.getAnnotation('gmf.node');
	
	t.name := s.name;
	t.domainClass := s.getDomainClassString();
	t.style := newNodeStyle(ann.getDetail('shape'));
	
	var styleColor := ann.getDetail('color');
	if (styleColor.isDefined()) t.style.color := topGroup.getColor(s.name + '_COLOR', styleColor);
	else t.style.color := defaultColor;
	
	var borderColor := ann.getDetail('border.color');
	if (borderColor.isDefined()) t.style.borderColor := topGroup.getColor(s.name + '_BORDER_COLOR', borderColor);
	else t.style.borderColor := defaultBorderColor;

	var borderLineStyle := ann.getDetail('border.style');
	if (borderLineStyle.isDefined()) t.style.borderLineStyle := getBorderStyle(borderLineStyle);
	else t.style.borderLineStyle := getBorderStyle();

	var resizeable := ann.getDetail('resizeable').ifUndefined(true);
	if (resizeable.asBoolean()) t.style.resizeKind := ODesign!diagram::ResizeKind#NSEW;
	else t.style.resizeKind := ODesign!diagram::ResizeKind#NONE;
	
	// Labelling
	t.style.labelExpression := s.getLabelExpression(); // FIXME: Not sure this works correctly
	t.style.labelPosition := s.getLabelPlacement();
	
	var labelColor := ann.getDetail('label.color');
	if (labelColor.isDefined()) t.style.labelColor := topGroup.getColor(s.name + "_LABEL_COLOR", labelColor);
	else t.style.labelColor := defaultLabelColor;
	// TODO: style.hideLabelByDefault 

	// TODO: Handle multi diagrams
	topViewpoint.ownedRepresentations.first().defaultLayer.nodeMappings.add(t);
}
